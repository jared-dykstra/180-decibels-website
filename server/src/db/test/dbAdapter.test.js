// import uuid from 'uuid/v4'
import { getAssessment } from '../dbAdapter'

// TODO: Change from integration test to unit test--this test requires a non-mocked database
it.skip('gets a quiz', async () => {
  const testName = 'helpMe'

  const quiz = await getAssessment(testName)

  // console.log(`Quiz=${JSON.stringify(quiz, null, 2)}`)
  expect(quiz.name).toEqual(testName)
  expect(quiz.configuration).toBeDefined()
  expect(quiz.questions).toBeDefined()
})

// const cypher = `CREATE
// ('0' :COMPANY {Label:'Company'}) ,
// ('1' :'Sales Marketing Function' {Label:'Accountabilities',Name:'SalesAndMarketing'}) ,
// ('3' :'Operations Function' {Label:'Accountabilities',Name:'Operations'}) ,
// ('4' :Marketing {Label:'Accountabilities',Name:'Marketing'}) ,
// ('5' :Sales {Label:'Accountabilities',Name:'Sales'}) ,
// ('6' :'Customer Care' {Label:'Accountabilities',Name:'CustomerCare'}) ,
// ('7' :PMProcess {Label:'Accountabilities',Name:'ProjectManagement'}) ,
// ('8' :'Org Functions' {Label:'AccountabilitiesMain',Name:'Functions'}) ,
// ('9' :AccMgt {Label:'Accountabilities',Name:'AccountManagement'}) ,
// ('10' :QA {Label:'Accountabilities',Name:'Quality'}) ,
// ('11' :IT {Label:'Accountabilities',Name:'IT'}) ,
// ('12' :Legal {Label:'Accountabilities',Name:'Legal'}) ,
// ('13' :Accounting {Label:'Accountabilities',Name:'Accounting'}) ,
// ('14' :HR {Label:'Accountabilities',Name:'HR'}) ,
// ('15' :Facilities {Label:'Accountabilities',Name:'Facilities'}) ,
// ('16' :'Market Fit' {Label:'ToBeSolvedItem',Name:'ProductMarketFit'}) ,
// ('18' :Revenue {Label:'WeeklyMetric',Name:'ReoccuringMonthyRevenue'}) ,
// ('20' :CULTURE {Label:'Values'}) ,
// ('21' :'Core Values' {Label:'CoreValues'}) ,
// ('22' :Scorecard {Label:'Scorecard',Name:'Scorecard'}) ,
// ('24' :Supportive {Label:'CoreValue',Name:'Supportive'}) ,
// ('26' :'To Be Solved' {Label:'ToBeSolvedList'}) ,
// ('27' :Genuine {Label:'CoreValue',Name:'Genuine'}) ,
// ('28' :Accountable {Label:'CoreValue',Name:'Accountable'}) ,
// ('29' :Enthusiastic {Label:'CoreValue',Name:'Enthusiastic'}) ,
// ('30' :Passionate {Label:'CoreValue',Name:'Passionate'}) ,
// ('31' :'PTP Values' {Label:'PermissionToPlayValues'}) ,
// ('32' :Dedication {Label:'PermissionToPlayValue',Name:'ReliabilityDedication'}) ,
// ('33' :Perseverance {Label:'PermissionToPlayValue',Name:'Perseverance'}) ,
// ('34' :Integrity {Label:'PermissionToPlayValue',Name:'TrustworthyIntegrity'}) ,
// ('36' :People {Label:'People'}) ,
// ('37' :PMO {Label:'Accountabilities',Name:'ProductManagement'}) ,
// ('38' :Calls {Label:'WeeklyMetric',Name:'NumberOfProspectCalls'}) ,
// ('39' :'Alpha BI' {Label:'90DayPriority',Name:'WorkingPrototype'}) ,
// ('42' :'New Contracts' {Label:'WeeklyMetric',Name:'NewClientContracts'}) ,
// ('43' :'Blog Posts' {Label:'WeeklyMetric',Name:'WeeklyBlogPost'}) ,
// ('45' :'New Web Site' {Label:'90DayPriority',Name:'WebsiteV2'}) ,
// ('46' :'Accounts Payable' {Label:'WeeklyMetric',Name:'AccountsPayableAge'}) ,
// ('47' :Davis {Label:'Person',Name:'Davis'}) ,
// ('48' :Oscar {Label:'Person',Name:'Oscar',Role:'Programmer'}) ,
// ('49' :Wanda {Label:'Person',Name:'Wanda',Role:'Accounting'}) ,
// ('50' :Referrals {Label:'90DayPriority',Name:'Generate20Referrals'}) ,
// ('52' :Banking {Label:'90DayPriority',Name:'ReoccuringPaymentsToCorp'}) ,
// ('53' :Complaints {Label:'WeeklyMetric',Name:'CustomerComplaints'}) ,
// ('55' :'New Pitch' {Label:'90DayPriority',Name:'NewPitchDeck'}) ,
// ('56' :'BI Demo' {Label:'90DayPriority',Name:'VideoDemoBI'}) ,
// ('57' :'Logo Wear' {Label:'90DayPriority',Name:'BuyLogoWear'}) ,
// ('58' :'Sales Metrics' {Label:'WeeklyMetric',Name:'SalesWeeklyMetrics'}) ,
// ('59' :'Product Metrics' {Label:'WeeklyMetric',Name:'ProductWeeklyMetrics'}) ,
// ('60' :'Operations Metrics' {Label:'WeeklyMetrics',Name:'OperationsWeeklyMetrics'}) ,
// ('61' :'Close Ratio' {Label:'WeeklyMetric',Name:'CloseRatio'}) ,
// ('62' :'Customer Ratings' {Label:'WeeklyMetric',Name:'CustomerRating'}) ,
// ('63' :Errors {Label:'WeeklyMetric',Name:'Errors'}) ,
// ('64' :Cancellations {Label:'WeeklyMetric',Name:'Cancellations'}) ,
// ('65' :Payroll {Label:'WeeklyMetric',Name:'Payroll'}) ,
// ('66' :'Sick Days' {Label:'WeeklyMetric',Name:'EmployeeSickDays'}) ,
// ('67' :'Open Positions' {Label:'WeeklyMetric',Name:'OpenPositions'}) ,
// ('68' :Dev {Label:'Accountability',Name:'Programming'}) ,
// ('69' :Servers {Label:'Accountability',Name:'ServerManagement'}) ,
// ('70' :DevTech {Label:'Accountability',Name:'ArchitectureAndTechnology'}) ,
// ('71' :Funding {Label:'ToBeSolved',Name:'CloseFunding'}) ,
// ('72' :'Product Service Function' {Label:'Accountabilities',Name:'ProductAndService'}) ,
// ('73' :'Software Development' {Label:'Accountabilities',Name:'SoftwareDevelopment'}) ,
// ('74' :'90D Priorities' {Label:'90DayPriorities'}) ,
// ('75' :Hank {Label:'Person',Name:'Hank'}) ,
// ('76' :Lacey {Label:'Person',Name:'Lacey',Role:'Sales'}) ,
// ('77' :Brett {Label:'Person',Name:'Brett',Role:'HR'}) ,
// ('78' :Karen {Label:'Person',Name:'Karen',Role:'EventPlanner'}) ,
// ('79' :Emma {Label:'Person',Name:'Emma',Role:'Marketing'}) ,
// ('80' :'Role Fit' {Label:'RoleFit',Name:'RoleFit'}) ,
// ('81' :'Wants Role' {Label:'RoleFit',Name:'Wants'}) ,
// ('82' :'Understands Role' {Label:'RoleFit',Name:'Understands'}) ,
// ('83' :'Has Ability' {Label:'RoleFit',Name:'Ability'}) ,
// ('84' :'New Leads' {Label:'90DayPriority',Name:'NewLeadsForSales'}) ,
// ('85' :'Back Channel Sales' {Label:'90DayPriority',Name:'20kBackChannelSales'}) ,
// ('86' :Recruiting {Label:'90DayPriority',Name:'Hire2Programmers'}) ,
// ('87' :'New Revenue' {Label:'90DayPriority',Name:'20kNewRevenue'}) ,
// ('1')-[:'ACCOUNTABILITIES' ]->('4'),
// ('1')-[:'RELATED_TO' ]->('5'),
// ('3')-[:'ACCOUNTABILITY' ]->('11'),
// ('3')-[:'ACCOUNTABILITY' ]->('12'),
// ('3')-[:'ACCOUNTABILITY' ]->('13'),
// ('3')-[:'ACCOUNTABILITY' ]->('14'),
// ('3')-[:'ACCOUNTABILITY' ]->('15'),
// ('0')-[:'CULTURE' ]->('20'),
// ('20')-[:'VALUES' ]->('21'),
// ('21')-[:'VALUES' ]->('24'),
// ('21')-[:'VALUES' ]->('27'),
// ('21')-[:'VALUES' ]->('28'),
// ('21')-[:'VALUES' ]->('29'),
// ('21')-[:'VALUES' ]->('30'),
// ('20')-[:'VALUES' ]->('31'),
// ('31')-[:'VALUES' ]->('32'),
// ('31')-[:'VALUES' ]->('33'),
// ('31')-[:'VALUES' ]->('34'),
// ('36')-[:'ON_THE_TEAM' ]->('47'),
// ('36')-[:'ON_THE_TEAM' ]->('48'),
// ('36')-[:'ON_THE_TEAM' ]->('49'),
// ('26')-[:'TBS' ]->('16'),
// ('22')-[:'OPS_METRIC' ]->('58'),
// ('22')-[:'OPS_METRIC' ]->('59'),
// ('22')-[:'OPS_METRIC' ]->('60'),
// ('60')-[:'OPS_METRIC' ]->('46'),
// ('58')-[:'OPS_METRIC' ]->('38'),
// ('58')-[:'OPS_METRIC' ]->('43'),
// ('58')-[:'OPS_METRIC' ]->('42'),
// ('58')-[:'OPS_METRIC' ]->('18'),
// ('59')-[:'OPS_METRIC' ]->('53'),
// ('58')-[:'OPS_METRIC' ]->('61'),
// ('59')-[:'OPS_METRIC' ]->('62'),
// ('59')-[:'OPS_METRIC' ]->('63'),
// ('59')-[:'OPS_METRIC' ]->('64'),
// ('60')-[:'OPS_METRIC' ]->('65'),
// ('60')-[:'OPS_METRIC' ]->('66'),
// ('60')-[:'OPS_METRIC' ]->('67'),
// ('37')-[:'ACCOUNTABILITY' ]->('6'),
// ('37')-[:'ACCOUNTABILITY' ]->('7'),
// ('37')-[:'ACCOUNTABILITY' ]->('9'),
// ('26')-[:'TBS' ]->('71'),
// ('0')-[:'TO_BE_SOLVED_LIST' ]->('26'),
// ('48')-[:'IS_ACCT_FOR' ]->('63'),
// ('47')-[:'IS_ACCT_FOR' ]->('64'),
// ('0')-[:'PEOPLE' ]->('36'),
// ('47')-[:'TO_COMPLETE_90DAY_PRIORITY' ]->('52'),
// ('47')-[:'TO_COMPLETE_90DAY_PRIORITY' ]->('39'),
// ('47')-[:'TO_COMPLETE_90DAY_PRIORITY' ]->('56'),
// ('48')-[:'TO_COMPLETE_90DAY_PRIORITY' ]->('45'),
// ('49')-[:'TO_COMPLETE_90DAY_PRIORITY' ]->('57'),
// ('49')-[:'TO_COMPLETE_90DAY_PRIORITY' ]->('55'),
// ('0')-[:'WEEKLY_SCORECARD' ]->('22'),
// ('0')-[:'FUNCTION' ]->('8'),
// ('8')-[:'FUNCTION' ]->('3'),
// ('8')-[:'FUNCTION' ]->('72'),
// ('72')-[:'ACCOUNTABILITY' ]->('37'),
// ('73')-[:'ACCOUNTABILITY' ]->('68'),
// ('73')-[:'ACCOUNTABILITY' ]->('69'),
// ('73')-[:'ACCOUNTABILITY' ]->('70'),
// ('73')-[:'ACCOUNTABILITY' ]->('10'),
// ('72')-[:'ACCOUNTABILITY' ]->('73'),
// ('8')-[:'FUNCTION' ]->('1'),
// ('47')-[:'ACCOUNTABLE_FOR' ]->('15'),
// ('47')-[:'ACCOUNTABLE_FOR' ]->('13'),
// ('47')-[:'ACCOUNTABLE_FOR' ]->('12'),
// ('47')-[:'ACCOUNTABLE_FOR' ]->('14'),
// ('48')-[:'ACCOUNTABLE_FOR' ]->('11'),
// ('49')-[:'ACCOUNTABLE_FOR' ]->('5'),
// ('48')-[:'ACCOUNTABLE_FOR' ]->('69'),
// ('48')-[:'ACCOUNTABLE_FOR' ]->('70'),
// ('48')-[:'ACCOUNTABLE_FOR' ]->('10'),
// ('48')-[:'ACCOUNTABLE_FOR' ]->('68'),
// ('47')-[:'ACCOUNTABLE_FOR' ]->('6'),
// ('47')-[:'ACCOUNTABLE_FOR' ]->('7'),
// ('47')-[:'ACCOUNTABLE_FOR' ]->('9'),
// ('49')-[:'ACCOUNTABLE_FOR' ]->('4'),
// ('0')-[:'NINETY_DAY_PRIORITIES' ]->('74'),
// ('74')-[:'PRIORITIES_MAR31' ]->('55'),
// ('74')-[:'PRIORITIES_MAR31' ]->('57'),
// ('74')-[:'PRIORITIES_MAR31' ]->('45'),
// ('74')-[:'PRIORITIES_MAR31' ]->('56'),
// ('74')-[:'PRIORITIES_MAR31' ]->('39'),
// ('74')-[:'PRIORITIES_MAR31' ]->('50'),
// ('74')-[:'PRIORITIES_MAR31' ]->('52'),
// ('36')-[:'ON_THE_TEAM' ]->('75'),
// ('36')-[:'ON_THE_TEAM' ]->('76'),
// ('36')-[:'ON_THE_TEAM' ]->('77'),
// ('36')-[:'ON_THE_TEAM' ]->('78'),
// ('36')-[:'ON_THE_TEAM' ]->('79'),
// ('0')-[:'ROLE_FIT' ]->('80'),
// ('80')-[:'NEEDS_TO' ]->('81'),
// ('80')-[:'NEEDS_TO' ]->('82'),
// ('80')-[:'NEEDS_TO' ]->('83'),
// ('79')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('33'),
// ('79')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('32'),
// ('79')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('34'),
// ('79')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('24'),
// ('79')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('27'),
// ('79')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('28'),
// ('79')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('30'),
// ('79')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('29'),
// ('79')-[:'WANTS_ROLE' ]->('81'),
// ('79')-[:'UNDERSTANDS_ROLE' ]->('82'),
// ('79')-[:'HAS_ABILITY_FOR_ROLE' ]->('83'),
// ('77')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('33'),
// ('77')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('32'),
// ('77')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('34'),
// ('77')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('24'),
// ('77')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('27'),
// ('77')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('28'),
// ('77')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('30'),
// ('77')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('29'),
// ('77')-[:'WANTS_ROLE' ]->('81'),
// ('77')-[:'UNDERSTANDS_ROLE' ]->('82'),
// ('77')-[:'HAS_ABILITY_FOR_ROLE' ]->('83'),
// ('78')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('33'),
// ('78')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('32'),
// ('78')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('34'),
// ('78')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('24'),
// ('78')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('27'),
// ('78')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('28'),
// ('78')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('30'),
// ('78')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('29'),
// ('78')-[:'WANTS_ROLE' ]->('81'),
// ('78')-[:'UNDERSTANDS_ROLE' ]->('82'),
// ('78')-[:'HAS_ABILITY_FOR_ROLE' ]->('83'),
// ('76')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('33'),
// ('76')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('32'),
// ('76')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('34'),
// ('76')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('24'),
// ('76')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('27'),
// ('76')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('28'),
// ('76')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('30'),
// ('76')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('29'),
// ('76')-[:'WANTS_ROLE' ]->('81'),
// ('76')-[:'UNDERSTANDS_ROLE' ]->('82'),
// ('76')-[:'HAS_ABILITY_FOR_ROLE' ]->('83'),
// ('75')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('33'),
// ('75')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('32'),
// ('75')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('34'),
// ('75')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('24'),
// ('75')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('27'),
// ('75')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('28'),
// ('75')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('30'),
// ('75')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('29'),
// ('75')-[:'WANTS_ROLE' ]->('81'),
// ('75')-[:'UNDERSTANDS_ROLE' ]->('82'),
// ('75')-[:'HAS_ABILITY_FOR_ROLE' ]->('83'),
// ('49')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('33'),
// ('49')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('32'),
// ('49')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('34'),
// ('49')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('24'),
// ('49')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('27'),
// ('49')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('28'),
// ('49')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('30'),
// ('49')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('29'),
// ('49')-[:'WANTS_ROLE' ]->('81'),
// ('49')-[:'UNDERSTANDS_ROLE' ]->('82'),
// ('49')-[:'HAS_ABILITY_FOR_ROLE' ]->('83'),
// ('47')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('33'),
// ('47')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('32'),
// ('47')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('34'),
// ('47')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('24'),
// ('47')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('27'),
// ('47')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('28'),
// ('47')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('30'),
// ('47')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('29'),
// ('48')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('33'),
// ('48')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('32'),
// ('48')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('34'),
// ('48')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('24'),
// ('48')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('28'),
// ('48')-[:'DEMONSTRATES_CULTURAL_FIT' ]->('29'),
// ('48')-[:'WANTS_ROLE' ]->('81'),
// ('48')-[:'UNDERSTANDS_ROLE' ]->('82'),
// ('48')-[:'HAS_ABILITY_FOR_ROLE' ]->('83'),
// ('74')-[:'PRIORITIES_MAR31' ]->('84'),
// ('74')-[:'PRIORITIES_MAR31' ]->('85'),
// ('74')-[:'PRIORITIES_MAR31' ]->('86'),
// ('74')-[:'PRIORITIES_MAR31' ]->('87'),
// ('78')-[:'TO_COMPLETE_90DAY_PRIORITY' ]->('87'),
// ('77')-[:'RELATED_TO' ]->('86'),
// ('75')-[:'TO_COMPLETE_90DAY_PRIORITY' ]->('85'),
// ('79')-[:'TO_COMPLETE_90DAY_PRIORITY' ]->('84'),
// ('16')-[:'RELATED_TO' ]->('4'),
// ('71')-[:'RELATED_TO' ]->('13'),
// ('43')-[:'RELATED_TO' ]->('73'),
// ('61')-[:'RELATED_TO' ]->('73'),
// ('61')-[:'RELATED_TO' ]->('16'),
// ('61')-[:'RELATED_TO' ]->('78'),
// ('58')-[:'RELATED_TO' ]->('71'),
// ('18')-[:'RELATED_TO' ]->('10'),
// ('38')-[:'RELATED_TO' ]->('73'),
// ('18')-[:'RELATED_TO' ]->('76'),
// ('46')-[:'RELATED_TO' ]->('49'),
// ('67')-[:'RELATED_TO' ]->('77'),
// ('65')-[:'RELATED_TO' ]->('49'),
// ('66')-[:'RELATED_TO' ]->('77'),
// ('62')-[:'RELATED_TO' ]->('47'),
// ('53')-[:'RELATED_TO' ]->('47')
// `

// it('cypher', async () => {
//   const edges = {}
//   const nodes = {}

//   const lines = cypher.split(/\r?\n/)

//   lines.forEach(l => {
//     const isNode = l.match(/\(.\d+.\s+:/)
//     if (isNode) {
//       const groups = l.match(/\(.(\d+).\s+:.+({.*})/)
//       const id = groups[1]
//       const json = groups[2]
//       const fields = json.match(/Label:'(.+).,Name:.(.+).}/)
//       if (fields) {
//         nodes[id] = { type: fields[1], label: fields[2] }
//       }
//     } else {
//       // console.log(`edge: ${l}`)
//       const groups = l.match(/..(.+)..-\[:.(.+). ]->\(.(.+).\),/)
//       if (groups) {
//         edges[uuid()] = {
//           source: groups[1],
//           target: groups[3],
//           label: groups[2]
//         }
//       }
//     }
//   })

//   console.log(JSON.stringify({ nodes, edges }, null, 2))
// })
